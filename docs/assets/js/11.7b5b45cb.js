(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{200:function(e,a,t){"use strict";t.r(a);var n=t(0),s=Object(n.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"bit-perfect-hi-res-audio-player-on-linux-with-mpd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bit-perfect-hi-res-audio-player-on-linux-with-mpd","aria-hidden":"true"}},[e._v("#")]),e._v(" Bit-Perfect Hi-Res Audio Player on Linux with MPD")]),e._v(" "),t("p",[t("em",[e._v("Build a custom audiophile quality digital audio player with a Linux PC,\nMPD and a USB DAC.")])]),e._v(" "),t("h2",{attrs:{id:"problem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#problem","aria-hidden":"true"}},[e._v("#")]),e._v(" Problem")]),e._v(" "),t("p",[e._v("If you have a growing digital collection of music titles, you might be\nconsidering buying a network audio player to provide audiophile quality\nplayback. However, being an excellent all-in-one and easy to set up devices,\nnetwork audio players still have limitations:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("they might have a built-in DAC, which you cannot swap;")])]),e._v(" "),t("li",[t("p",[e._v("they might not support some storage devices, such as external HDD;")])]),e._v(" "),t("li",[t("p",[e._v("they might not support some audio formats, take DSD128 for example;")])]),e._v(" "),t("li",[t("p",[e._v("they are usually controlled with a mobile app, which might be inconvenient or\nbuggy;")])]),e._v(" "),t("li",[t("p",[e._v("they are rather expensive!")])])]),e._v(" "),t("h2",{attrs:{id:"solution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solution","aria-hidden":"true"}},[e._v("#")]),e._v(" Solution")]),e._v(" "),t("p",[e._v("An alternative to a ready-made network audio player would be a PC with proper\nsoftware and a USB DAC.")]),e._v(" "),t("p",[e._v("When it comes to the software, my personal recommendation would be to go with\n"),t("a",{attrs:{href:"https://www.musicpd.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Music Player Daemon (MPD)"),t("OutboundLink")],1),e._v(". It is an extremely\nflexible, powerful, server-side application for playing music.")]),e._v(" "),t("p",[e._v("MPD features:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("support of\n"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Advanced_Linux_Sound_Architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("ALSA"),t("OutboundLink")],1),e._v("\noutput and hence bit-perfect playback;")])]),e._v(" "),t("li",[t("p",[e._v("a great variety of audio formats supported (plays virtually anything);")])]),e._v(" "),t("li",[t("p",[e._v("a wide selection of clients available, from console to mobile apps, for\nremote playback control;")])]),e._v(" "),t("li",[t("p",[e._v("you can play music from any storage device, be it an external HDD, a USB\ndrive, a memory card, an optical disk or a NAS volume.")])])]),e._v(" "),t("p",[e._v("And it is free! Just as Linux.")]),e._v(" "),t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("h3",{attrs:{id:"computer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#computer","aria-hidden":"true"}},[e._v("#")]),e._v(" Computer")]),e._v(" "),t("p",[e._v("MPD runs on Windows, macOS, BSD, Linux and other UNIX-like operating systems.\nBut if you want to achieve "),t("em",[e._v("bit-perfect")]),e._v(" playback, the best and (probably) the\nonly option is to run it on Linux.")]),e._v(" "),t("p",[e._v("A part of Linux is ALSA (Advanced Linux Sound Architecture) — a set of\nbuilt-in Linux kernel modules that provide an interface (API) for sound card\ndevice drivers. ALSA handles automatic configuration of sound-card hardware and\nmultiple sound devices.")]),e._v(" "),t("p",[e._v("With ALSA you can configure a direct sound output without any processing\n(e. g. resampling) in between the audio player and the sound card. ALSA is\nsupported by all Linux audio players including MPD.")]),e._v(" "),t("p",[e._v("That said, you will need any computer that can run Linux. Even a single-board\nARM-powered computer, such as Raspberry Pi, will do.")]),e._v(" "),t("p",[e._v("As for me, I needed something more powerful than a Raspberry Pi, that's why I\nbought an Intel NUC mini-PC unit with an x86-64 CPU, and installed RAM and SSD\nin it — payed less than $250 for everything. My NUC is running Debain Linux. I\ninstalled strongSwan VPN server and an NFS server on it to make my media\nlibrary available throughout the network, and PLEX server for video streaming.\nAnd of course, I installed MPD and configured it to output audio through ALSA\nto my Arcam irDAC-II connected via USB.")]),e._v(" "),t("h3",{attrs:{id:"linux-distro"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-distro","aria-hidden":"true"}},[e._v("#")]),e._v(" Linux Distro")]),e._v(" "),t("p",[e._v("So, you will need to install a Linux distribusion on your computer, if you\nare not using it already.")]),e._v(" "),t("p",[e._v("Linux by itself is just a kernel. If you want a complete operating system, you\nneed to choose and install a Linux distribusion which includes the Linux\nkernel, package manager and a collection of software. My personal choice is\n"),t("a",{attrs:{href:"https://www.debian.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Debian"),t("OutboundLink")],1),e._v(". If you are new to Linux, I would recommend\nyou to start with "),t("a",{attrs:{href:"https://ubuntu.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ubuntu"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("In case you are going to run MPD on a server, consider installing a server\nvariant of the distribusion of your choice. Although my Intel NUC has an HDMI\noutput for connecting a display, I do not use it as a desktop computer.\nInstead, I interact with it through remote command-line interface (via SSH) and\nI control MPD playback on my iPhone. I do not need a window system, a window\nmanager, or a desktop environment, and server distribusions do not include\nthese.")]),e._v(" "),t("h3",{attrs:{id:"usb-dac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usb-dac","aria-hidden":"true"}},[e._v("#")]),e._v(" USB DAC")]),e._v(" "),t("p",[e._v("If you want to get the best sonic quality, you will need an good external\nDigital-to-analog converter (DAC). There are plenty of DACs available and you\nhave to choose one by yourself. The one I use is "),t("a",{attrs:{href:"https://www.arcam.co.uk/products,rSeries,USB-DAC,irdacii.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arcam\nirDAC-II"),t("OutboundLink")],1),e._v(". Back\nin the day, I bought it for a very good price. If you want to get a very good\nvalue for money, consider a DAC from "),t("a",{attrs:{href:"https://emotiva.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emotiva"),t("OutboundLink")],1),e._v(" or\n"),t("a",{attrs:{href:"https://www.schiit.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Schiit"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup","aria-hidden":"true"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),t("p",[e._v("So, you have Linux running on your computer, a DAC attached to it via USB and\nyour music library mounted in the filesystem. Time to set up MPD!")]),e._v(" "),t("p",[e._v("MPD is a server application (hence the name — Music Player "),t("strong",[e._v("Daemon")]),e._v("), and it\ndoes not have a GUI to interact with. Instead, you need to edit its\nconfiguration file located at "),t("code",[e._v("/etc/mpd.conf/")]),e._v(". It's not the only file you need\nto edit, so the best way to go is to open a terminal emulator and use a\nterminal text editor, such as Vim, Emacs or Nano.")]),e._v(" "),t("div",{staticClass:"warning custom-block"},[t("p",[e._v("This guide assumes that you are using Ubuntu or any other Debian-based Linux\ndistro and use Vim as text editor. If you are using a different editor (say,\nEmacs) just substitute "),t("code",[e._v("vim")]),e._v(" for it in the command line instructions cited\nin this guide.")]),e._v(" "),t("p",[e._v("If you do not know how to exit Vim, press "),t("code",[e._v(":q!")]),e._v(" to quit without saving changes.")]),e._v(" "),t("p",[e._v("If you want to use a simple and friendly editor, use Nano ("),t("code",[e._v("nano")]),e._v(").")])]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("If you want to learn Vim and find out why so many people love it, run\n"),t("code",[e._v("vimtutor")]),e._v(" and have a tutorial on how to use Vim.")])]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("If you do not feel comfortable with a command-line interface at all, you can\nrun a file browser as the superuser and edit files in graphical text editors.\nTo do this on Ubuntu 18.04, for example, open a terminal emulator and run:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo nautilus\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h3",{attrs:{id:"permanent-index-value-for-the-sound-card-recommended"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#permanent-index-value-for-the-sound-card-recommended","aria-hidden":"true"}},[e._v("#")]),e._v(" Permanent index value for the sound card (Recommended)")]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[e._v("Optional step")]),e._v(" "),t("p",[e._v("This step is optional and you might skip it if you have\nonly one external audio device that you connect to your computer. However, I do\nrecommend to set up permanent index values for your sound devices if you have\nmany of them.")])]),e._v(" "),t("p",[e._v("Every time you connect your DAC to your computer, the "),t("em",[e._v("Generic USB Audio\nDriver")]),e._v(" (the "),t("code",[e._v("snd-usb-audio")]),e._v(" kernel module) assigns an index value to the DAC's\nsound card. You will need to specify this value in the output configration of\nMPD. When you have multiple audio devices and you connect and disconnect them\noften, the "),t("code",[e._v("snd-usb-audio")]),e._v(" module might assign different index values for the\nsame device each time you reconnect it. To make sure that an MPD output (and\nyou can configure multiple outputs!) is always using the same device, you might\nwant to assign permanent index values to each device.")]),e._v(" "),t("p",[e._v("To assign permanent index values, you need to set them in the "),t("code",[e._v("snd-usb-audio")]),e._v("\nmodule options.")]),e._v(" "),t("h4",{attrs:{id:"list-the-soundcards"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list-the-soundcards","aria-hidden":"true"}},[e._v("#")]),e._v(" List the soundcards")]),e._v(" "),t("p",[e._v("First, find out which index values are already used for other sound devices.\nDisconnect your DAC(s) and list all the soundcards:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("aplay -l\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("Example output:")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("**** List of PLAYBACK Hardware Devices ****\ncard 0: PCH [HDA Intel PCH], device 0: ALC283 Analog [ALC283 Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 1: ALC283 Digital [ALC283 Digital]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 3: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 7: HDMI 1 [HDMI 1]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: PCH [HDA Intel PCH], device 8: HDMI 2 [HDMI 2]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])])]),t("p",[e._v("In the example output above you see that index "),t("code",[e._v("0")]),e._v(" is assigned to the "),t("code",[e._v("HDA Intel PCH")]),e._v(" soundcard. This is a soundcard integrated into the motherboard.")]),e._v(" "),t("p",[e._v("When you connect your DAC, its sound card gets a free index. Let's see what\nhappens when I connect my Arcam irDAC-II:")]),e._v(" "),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("A USB DAC connected")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("**** List of PLAYBACK Hardware Devices ****\ncard 0: PCH [HDA Intel PCH], device 0: ALC283 Analog [ALC283 Analog]\n  Subdevices: 1/1\n...\ncard 1: II [irDAC II], device 0: USB Audio [USB Audio]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])])]),t("p",[e._v("From this output you see that soundcard "),t("code",[e._v("irDAC II")]),e._v(" got an index value of "),t("code",[e._v("1")]),e._v("\nand it controls only one audio device "),t("code",[e._v("0")]),e._v(" named simply "),t("code",[e._v("USB Audio")]),e._v(".")]),e._v(" "),t("p",[e._v("Let's make the soundcard index "),t("code",[e._v("1")]),e._v(" permanent for "),t("code",[e._v("irDAC II")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"find-the-vid-and-pid-of-your-dac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#find-the-vid-and-pid-of-your-dac","aria-hidden":"true"}},[e._v("#")]),e._v(" Find the VID and PID of your DAC")]),e._v(" "),t("p",[e._v("To do this you need to find out the Vendor ID (VID) and the Product ID (PID) of\nyour USB DAC. These values identify a plugged USB device. List all the attached\nUSB devices and try to find your DAC. For example:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("lsusb\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("Output:")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 003: ID 8087:0aa7 Intel Corp.\nBus 001 Device 073: ID 25c4:0008\nBus 001 Device 058: ID 1058:25a2 Western Digital Technologies, Inc.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])])]),t("p",[e._v("Most likely, you will not see the vendor name of your device in the list. To\nunderstand which device is your DAC, try to disconnect the DAC, list the USB\ndevices, reconnect the DAC and print the list again to see what IDs appeared in\nthe list. You can also increase the verbosity of "),t("code",[e._v("lsusb")]),e._v(" output with the\n"),t("code",[e._v("--verbose")]),e._v(" option:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("lsusb --verbose\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("In the verbose output try to search for terms "),t("code",[e._v("Audio")]),e._v(" and/or "),t("code",[e._v("Control Device")]),e._v(".")]),e._v(" "),t("p",[e._v("With the help of the disconnect-list-connect-list-again method I found out that\nmy DAC is denoted as "),t("code",[e._v("Bus 001 Device 073: ID 25c4:0008")]),e._v(" line in the "),t("code",[e._v("lsusb")]),e._v("\noutput. Here "),t("code",[e._v("25c4")]),e._v(" is the Vendor ID and "),t("code",[e._v("0008")]),e._v(" is the Product ID.")]),e._v(" "),t("h4",{attrs:{id:"set-a-permanent-index-for-your-dac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-a-permanent-index-for-your-dac","aria-hidden":"true"}},[e._v("#")]),e._v(" Set a permanent index for your DAC")]),e._v(" "),t("p",[e._v("Let's edit the "),t("code",[e._v("/etc/modprobe.d/alsa-base.conf")]),e._v(" and set options for the\n"),t("code",[e._v("snd-usb-audio")]),e._v(" module. First, open the file in a text editor:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo vim /etc/modprobe.d/alsa-base.conf\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("According to the "),t("a",{attrs:{href:"https://alsa-project.org/wiki/Matrix:Module-usb-audio",target:"_blank",rel:"noopener noreferrer"}},[e._v("ALSA Project\ndocumentation"),t("OutboundLink")],1),e._v(", the\nvalues of module options for "),t("code",[e._v("snd-usb-audio")]),e._v(", such as "),t("code",[e._v("index")]),e._v(", "),t("code",[e._v("vid")]),e._v(" and "),t("code",[e._v("pid")]),e._v(",\nshould be arrays of integers. Below is an example of how to set the options,\njust add that single line to the file:")]),e._v(" "),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("/etc/modprobe.d/alsa-base.conf:")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("options snd-usb-audio index=1 vid=0x25c4 pid=0x0008\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),t("p",[e._v("Note that VID and PID are hexadecimal numbers, so you need to prefix them with\n"),t("code",[e._v("0x")]),e._v(".")]),e._v(" "),t("p",[e._v("If you want to assign another permanent index value to another sound device of\nyours, add its index number, VID and PID to the corresponding arrays. Use\ncommas to separate the values in the arrays.")]),e._v(" "),t("p",[e._v("In the following example I assign index "),t("code",[e._v("2")]),e._v(" to my second DAC — a Dragonfly\nBlack — which has a VID "),t("code",[e._v("21b4")]),e._v(" and PID "),t("code",[e._v("0083")]),e._v(":")]),e._v(" "),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("/etc/modprobe.d/alsa-base.conf:")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("options snd-usb-audio index=1,2 vid=0x25c4,0x21b4 pid=0x0008,0x0083\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),t("p",[e._v("When you set the proper values, write the file (use "),t("code",[e._v(":wq")]),e._v(" in Vim) and reload\nthe "),t("code",[e._v("snd-usb-audio")]),e._v(" kernel module:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo modprobe -r snd-usb-audio\nsudo modprobe snd-usb-audio\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("That's it! You can now check your USB devices list while\ndisconnecting/connecting your audio devices in random order and see that each\ndevice gets the same index number every time you connect it.")]),e._v(" "),t("h3",{attrs:{id:"mpd-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mpd-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" MPD Configuration")]),e._v(" "),t("p",[e._v("First, you need to install MPD on your computer.")]),e._v(" "),t("p",[e._v("You can either build MPD from source code or install it from the official\nrepositories of your Linux distribusion.")]),e._v(" "),t("p",[e._v("To install MPD on Ubuntu, run:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo apt-get update\nsudo apt-get install mpd\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Check the status of the "),t("code",[e._v("mpd")]),e._v(" service. If your Linux distro has the "),t("code",[e._v("systemd")]),e._v("\nservice manager (Ubuntu switched to "),t("code",[e._v("systemd")]),e._v(" in version 15.04), run the\nfollowing command:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl status mpd.service\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"output"},[t("p",{staticClass:"title"},[e._v("If MPD is running, you will see a similar output:")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("● mpd.service - Music Player Daemon\n   Loaded: loaded (/lib/systemd/system/mpd.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2019-10-04 00:45:52 MSK; 14s ago\n     Docs: man:mpd(1)\n           man:mpd.conf(5)\n           file:///usr/share/doc/mpd/user-manual.html\n Main PID: 11181 (mpd)\n    Tasks: 3 (limit: 4915)\n   Memory: 12.6M\n      CPU: 511ms\n   CGroup: /system.slice/mpd.service\n           └─11181 /usr/bin/mpd --no-daemon\n\nOct 04 00:45:52 nuc systemd[1]: Starting Music Player Daemon...\nOct 04 00:45:52 nuc mpd[11181]: hybrid_dsd: The Hybrid DSD decoder is disabled because it was not explicitly enabled\nOct 04 00:45:52 nuc systemd[1]: Started Music Player Daemon.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])])]),t("p",[e._v("Now you need to configure your MPD server. Refer to the official "),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#configuration",target:"_blank",rel:"noopener noreferrer"}},[e._v("MPD\ndocumentation"),t("OutboundLink")],1),e._v(" to\nlearn about the supported settings and their values.")]),e._v(" "),t("p",[e._v("MPD reads its configuration from a text file. Usually, that is "),t("code",[e._v("/etc/mpd.conf")]),e._v(",\nunless a different path is specified on the command line. To edit the\nconfiguration file, run:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo vim /etc/mpd.conf\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The following example shows my personal MPD configuration:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('music_directory "/media/Media/Music"\n\ndatabase {\n  plugin "simple"\n  path "/var/lib/mpd/db"\n}\n\nstate_file   "/var/lib/mpd/state"\nsticker_file "/var/lib/mpd/stickers"\nplaylist_directory "/var/lib/mpd/playlists"\n\nlog_file "syslog"\n#log_level "verbose"\n\nuser "mpd"\nzeroconf_name "Intel NUC — MPD"\nauto_update "no"\n\nresampler {\n  plugin "libsamplerate"\n  type "0"\n}\nreplaygain "off"\n\ninput {\n  plugin "tidal"\n  enabled "no"\n}\n\ninput {\n  plugin "qobuz"\n  enabled "no"\n}\n\naudio_output {\n  type "alsa"\n  name "Arcam irDAC-II"\n  device "hw:1,0"\n\n  auto_resample "no"\n  auto_channels "no"\n  auto_format "no"\n  dop "yes"\n\n  mixer_type "none"\n  replay_gain_handler "none"\n}\n\naudio_output {\n  type "alsa"\n  name "AudioQuest DragonFly Black v1.5"\n  device "hw:2,0"\n\n  auto_resample "no"\n  auto_channels "no"\n  auto_format "no"\n\n  mixer_type "hardware"\n  mixer_device "hw:2"\n  mixer_control "PCM"\n  mixer_index "0"\n  replay_gain_handler "mixer"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br"),t("span",{staticClass:"line-number"},[e._v("40")]),t("br"),t("span",{staticClass:"line-number"},[e._v("41")]),t("br"),t("span",{staticClass:"line-number"},[e._v("42")]),t("br"),t("span",{staticClass:"line-number"},[e._v("43")]),t("br"),t("span",{staticClass:"line-number"},[e._v("44")]),t("br"),t("span",{staticClass:"line-number"},[e._v("45")]),t("br"),t("span",{staticClass:"line-number"},[e._v("46")]),t("br"),t("span",{staticClass:"line-number"},[e._v("47")]),t("br"),t("span",{staticClass:"line-number"},[e._v("48")]),t("br"),t("span",{staticClass:"line-number"},[e._v("49")]),t("br"),t("span",{staticClass:"line-number"},[e._v("50")]),t("br"),t("span",{staticClass:"line-number"},[e._v("51")]),t("br"),t("span",{staticClass:"line-number"},[e._v("52")]),t("br"),t("span",{staticClass:"line-number"},[e._v("53")]),t("br"),t("span",{staticClass:"line-number"},[e._v("54")]),t("br"),t("span",{staticClass:"line-number"},[e._v("55")]),t("br"),t("span",{staticClass:"line-number"},[e._v("56")]),t("br"),t("span",{staticClass:"line-number"},[e._v("57")]),t("br"),t("span",{staticClass:"line-number"},[e._v("58")]),t("br"),t("span",{staticClass:"line-number"},[e._v("59")]),t("br"),t("span",{staticClass:"line-number"},[e._v("60")]),t("br"),t("span",{staticClass:"line-number"},[e._v("61")]),t("br"),t("span",{staticClass:"line-number"},[e._v("62")]),t("br"),t("span",{staticClass:"line-number"},[e._v("63")]),t("br")])]),t("p",[e._v("Now let us analyse it line by line. Here I will quote the official\ndocumentation quite a lot.")]),e._v(" "),t("h4",{attrs:{id:"music-directory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#music-directory","aria-hidden":"true"}},[e._v("#")]),e._v(" Music directory")]),e._v(" "),t("p",[e._v("When you play local files, you should organize them within a directory called\nthe “music directory”. This is configured in MPD with the\n"),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#configuring-the-music-directory",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("music_directory")]),t("OutboundLink")],1),e._v("\nsetting:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('music_directory "/media/Media/Music"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Here "),t("code",[e._v("/media/Media")]),e._v(" is where my external HDD drive is mounted into the root\nfilesystem. Ubuntu usually mounts external drives to "),t("code",[e._v("/media")]),e._v(". "),t("code",[e._v("Music")]),e._v(" is the\nfolder where I keep most of my music on the drive.")]),e._v(" "),t("h4",{attrs:{id:"database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database","aria-hidden":"true"}},[e._v("#")]),e._v(" Database")]),e._v(" "),t("p",[e._v("If a music directory is configured, one database plugin is used. To configure\nthis plugin, add a\n"),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#configuring-database-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("database"),t("OutboundLink")],1),e._v(" block to mpd.conf:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('database {\n  plugin "simple"\n  path "/var/lib/mpd/db"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[t("code",[e._v("simple")]),e._v(" is the default plugin. It stores a copy of the database in memory. A\nfile is used for permanent storage.")]),e._v(" "),t("h4",{attrs:{id:"the-state-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-state-file","aria-hidden":"true"}},[e._v("#")]),e._v(" The state file")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#the-state-file",target:"_blank",rel:"noopener noreferrer"}},[e._v("state file"),t("OutboundLink")],1),e._v(" is\na file where MPD saves and restores its state (play queue, playback position\netc.) to keep it persistent across restarts and reboots. It is an optional\nsetting.")]),e._v(" "),t("p",[e._v("MPD will attempt to load the state file during startup, and will save it\nwhen shutting down the daemon. Additionally, the state file is refreshed\nevery two minutes (after each state change).")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('state_file   "/var/lib/mpd/state"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"the-sticker-database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-sticker-database","aria-hidden":"true"}},[e._v("#")]),e._v(" The sticker database")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#the-sticker-database",target:"_blank",rel:"noopener noreferrer"}},[e._v("“Stickers”"),t("OutboundLink")],1),e._v("\nare pieces of information attached to songs. Some clients use them to store\nratings and other volatile data.")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('sticker_file "/var/lib/mpd/stickers"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"playlist-directory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#playlist-directory","aria-hidden":"true"}},[e._v("#")]),e._v(" Playlist directory")]),e._v(" "),t("p",[e._v("Stored playlists are some kind of secondary playlists which can be created,\nsaved, edited and deleted by the client. They are addressed by their names. Its\ncontents can be loaded into the queue, to be played back. The\n"),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/user.html#stored-playlists",target:"_blank",rel:"noopener noreferrer"}},[e._v("playlist_directory"),t("OutboundLink")],1),e._v("\nsetting specifies where those playlists are stored:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('playlist_directory "/var/lib/mpd/playlists"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"log-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-file","aria-hidden":"true"}},[e._v("#")]),e._v(" Log file")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("log_file")]),e._v(" parameter specifies where the log file should be located. The\nspecial value "),t("code",[e._v("syslog")]),e._v(" makes MPD use the local syslog daemon:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('log_file "syslog"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("If you set the "),t("code",[e._v("log_file")]),e._v(" to "),t("code",[e._v("syslog")]),e._v(" and your Linux distro runs "),t("code",[e._v("systemd")]),e._v("\nservice manager (Ubuntu switched to "),t("code",[e._v("systemd")]),e._v(" in version 15.04), you can use\n"),t("code",[e._v("journalctl")]),e._v(" to view logs in real time:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo journalctl -u mpd.service -f\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h4",{attrs:{id:"log-level"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-level","aria-hidden":"true"}},[e._v("#")]),e._v(" Log level")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("log_level")]),e._v(" parameter specifies how verbose the logs are. Set "),t("code",[e._v("log_level")]),e._v("\nto "),t("code",[e._v("verbose")]),e._v(" to make MPD record excessive amounts of information for debugging\npurposes, in case you need to find out why your MPD is not working.")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('#log_level "verbose"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("In my configuration I commented out the "),t("code",[e._v("log_level")]),e._v(" parameter completely with\nthe "),t("code",[e._v("#")]),e._v(" symbol.")]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("When MPD loads its configuration, it ignores lines that start with the "),t("code",[e._v("#")]),e._v("\nsymbol. If an optional parameter is not set in the configuration or you\ncommented it out, MPD will use a default value for it.")]),e._v(" "),t("p",[e._v("The default value for "),t("code",[e._v("log_level")]),e._v(" is… "),t("code",[e._v("default")]),e._v(", which means minimal logging.")])]),e._v(" "),t("p",[e._v("When I was doing my initial setup of MPD, I set "),t("code",[e._v("log_level")]),e._v(" to "),t("code",[e._v("verbose")]),e._v(" to\nunderstand how different configuration parameters change the way MPD works.\nWhen I was done with the configuration, I commented "),t("code",[e._v("log_level")]),e._v(" out and\nrestarted MPD to return it back to the default minimal logging.")]),e._v(" "),t("h4",{attrs:{id:"mpd-process-user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mpd-process-user","aria-hidden":"true"}},[e._v("#")]),e._v(" MPD process user")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("user")]),e._v(" parameter specifies the user that MPD will run as, if set. MPD\nshould never run as root, and you may use this option to make MPD change its\nuser id after initialization.")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('user "mpd"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("To create a system user for MPD, run:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo useradd -G audio -r mpd\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("This will create a system user "),t("code",[e._v("mpd")]),e._v(" and add it to group "),t("code",[e._v("audio")]),e._v(", which allows\ndirect access to sound hardware.")]),e._v(" "),t("h4",{attrs:{id:"zeroconf-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zeroconf-name","aria-hidden":"true"}},[e._v("#")]),e._v(" Zeroconf name")]),e._v(" "),t("p",[e._v("Via Zeroconf, MPD can announce its presence on the network. Zeroconf in MPD is\nenabled by default. You can specify the service name to publish via Zeroconf\nwith the "),t("code",[e._v("zeroconf_name")]),e._v(" setting. This is the name that MPD clients display\nwhen you connect to your MPD server.")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('zeroconf_name "Intel NUC — MPD"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Now restart MPD:")]),e._v(" "),t("h4",{attrs:{id:"auto-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auto-update","aria-hidden":"true"}},[e._v("#")]),e._v(" Auto update")]),e._v(" "),t("p",[e._v("MPD supports automatic update of music database when files are changed in\nthe "),t("code",[e._v("music_directory")]),e._v(". You can freely enable automatic update unless you mount\nnetwork filesystems, such as NFS, inside your music directory. The thing is\nthat for automatic updates MPD relies on the Linux kernel subsystem "),t("code",[e._v("inotify")]),e._v("\nwhich provides a mechanism for monitoring filesystem events. Unfortunately,\n"),t("code",[e._v("inotify")]),e._v(" cannot track changes on remote filesystems.")]),e._v(" "),t("p",[e._v("I store a part of my music library on a remote server and mount it via NFS. I\nhad issues with automatic update because of that and had to disable this\nfeature.")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('auto_update "no"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"resampler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resampler","aria-hidden":"true"}},[e._v("#")]),e._v(" Resampler")]),e._v(" "),t("p",[e._v("Sometimes, music needs to be resampled before it can be played; for example,\nwhen you want to play high-res audio with 192 kHz sampling rate, while your DAC\ncan only handle 96 kHz. Resampling reduces the quality and consumes a lot of\nCPU. There are different options, some of them optimized for high quality and\nothers for low CPU usage, but you can’t have both at the same time. Often, the\nresampler is the component that is responsible for most of MPD’s CPU usage.\nSince MPD comes with high quality defaults, it may appear that MPD consumes\nmore CPU than other software.")]),e._v(" "),t("p",[e._v("Check the "),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/plugins.html#resampler-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("Resampler\nplugins"),t("OutboundLink")],1),e._v("\nreference for a list of resamplers and how to configure them. Out of all the\nresampler plugins, "),t("code",[e._v("libsamplerate")]),e._v(', also known as Secret Rabbit Code (SRC),\nwith the "Best Sinc" interpolator (interpolator type '),t("code",[e._v("0")]),e._v(") provides the best\nquality.")]),e._v(" "),t("p",[e._v("The resampler can be configured in a block named "),t("code",[e._v("resampler")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('resampler {\n  plugin "libsamplerate"\n  type "0"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h4",{attrs:{id:"replaygain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replaygain","aria-hidden":"true"}},[e._v("#")]),e._v(" ReplayGain")]),e._v(" "),t("p",[e._v("If "),t("code",[e._v("replaygain")]),e._v(" is specified, MPD will adjust the volume of songs played\nusing ReplayGain tags. We do not want our audio signal to change until it\nreaches the analog stage, so we disable ReplayGain completely:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('replaygain "off"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"input-plugins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input-plugins","aria-hidden":"true"}},[e._v("#")]),e._v(" Input plugins")]),e._v(" "),t("p",[e._v("By default, MPD runs with Tidal and Qobuz plugins enabled. If you don't use\nthese services, just disable the plugins:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('input {\n  plugin "tidal"\n  enabled "no"\n}\n\ninput {\n  plugin "qobuz"\n  enabled "no"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h4",{attrs:{id:"audio-outputs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-outputs","aria-hidden":"true"}},[e._v("#")]),e._v(" Audio outputs")]),e._v(" "),t("p",[e._v("Now it's time to configure audio outputs!")]),e._v(" "),t("p",[e._v("Each audio output is configured in a separate "),t("code",[e._v("audio_output")]),e._v(" block. You can\nconfigure multiple outputs and turn them on/off via your MPD client\napplication.")]),e._v(" "),t("p",[e._v("Each output's functionality is provided by an output plugin. You can find more information in the "),t("a",{attrs:{href:"https://www.musicpd.org/doc/html/plugins.html#output-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("Output plugins"),t("OutboundLink")],1),e._v(" reference.")]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("There are several rules you need to follow to achieve bit-perfect playback with\nMPD:")]),e._v(" "),t("ul",[t("li",[e._v("Use the ALSA output plugin.")]),e._v(" "),t("li",[e._v("Disable sound processing inside ALSA by configuring a “hardware” device\n("),t("code",[e._v("hw:0,0")]),e._v(" or similar).")]),e._v(" "),t("li",[e._v("Don't use software volume control (setting "),t("code",[e._v("mixer_type")]),e._v(").")]),e._v(" "),t("li",[e._v("If you control volume on a pre-amp, set the souncard's (i. e. “hardware”)\nmixer volume to 0 dB full scale. For that run "),t("code",[e._v("alsamixer")]),e._v(", press F6, choose\nyour soundcard, select the mixer and adjust the volume.")]),e._v(" "),t("li",[e._v("Don't force MPD to use a specific audio format (settings "),t("code",[e._v("format")]),e._v(",\n"),t("code",[e._v("audio_output_format")]),e._v(").")])])]),e._v(" "),t("p",[e._v("Below is the audio output configuration that I use for my Arcam irDAC-II:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('audio_output {\n  type "alsa"\n  name "Arcam irDAC-II"\n  device "hw:1,0"\n\n  auto_resample "no"\n  auto_channels "no"\n  auto_format "no"\n  dop "yes"\n\n  mixer_type "none"\n  replay_gain_handler "none"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("p",[e._v("Let's analyse it line by line.")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("(2) "),t("code",[e._v("type")]),e._v(" is the name of the audio output plugin.")])]),e._v(" "),t("li",[t("p",[e._v("(3) "),t("code",[e._v("name")]),e._v(" sets the name of the audio output. You will see it in an MPD\nclient.")])]),e._v(" "),t("li",[t("p",[e._v("(4) "),t("code",[e._v("device")]),e._v(" sets the device name.")]),e._v(" "),t("p",[e._v("This can be any valid ALSA device name, but we need to tell ALSA to access\nthe hardware device directly, by specifying PCM type "),t("code",[e._v("hw")]),e._v(" followed by the\nsound card number and the device number. A third number can be added\n("),t("code",[e._v("hw:0,0,0")]),e._v(") for the sub-device number, but it defaults to the next\nsub-device available. The numbers start from zero, so, for example, to\naccess the first device on the second sound card, you would use "),t("code",[e._v("hw:1,0")]),e._v(".")]),e._v(" "),t("p",[e._v("Refer to the "),t("router-link",{attrs:{to:"/audio/#permanent-index-value-for-the-sound-card-recommended"}},[e._v("Permanent index value for the sound\ncard")]),e._v(" section on\nhow to find and permanently set the sound card index number. Usually, sound\ncards in DACs control only one device, so the device number would be "),t("code",[e._v("0")]),e._v(".")],1),e._v(" "),t("p",[e._v("For my Arcam irDAC's sound card, I permanently set the index value to "),t("code",[e._v("1")]),e._v(",\nso I address to it as "),t("code",[e._v("hw:1,0")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("(6, 7, 8) The "),t("code",[e._v("auto_resample")]),e._v(", "),t("code",[e._v("auto_channels")]),e._v(" and "),t("code",[e._v("auto_format")]),e._v(" settings are\ndisabled, so ALSA will not attempt to resample, convert between different\nchannel numbers and sample formats (16 bit, 24 bit, etc.)")])]),e._v(" "),t("li",[t("p",[e._v("(9) If "),t("code",[e._v("dop")]),e._v(" is set to yes, then DSD over PCM according to the "),t("a",{attrs:{href:"http://dsd-guide.com/dop-open-standard",target:"_blank",rel:"noopener noreferrer"}},[e._v("DoP\nstandard"),t("OutboundLink")],1),e._v(" is enabled. This wraps DSD\nsamples in fake 24 bit PCM, and is understood by some DSD capable products,\nbut may be harmful to other hardware. The default value is "),t("code",[e._v("no")]),e._v(" and you can\nenable the option at your own risk.")]),e._v(" "),t("p",[e._v("Although Arcam lists DSD128 in the audio formats supported by irDAC, irDAC\ndoes not support native DSD and plays DSD128 only via DoP. That is why I\nenabled it.")])]),e._v(" "),t("li",[t("p",[e._v("(11) "),t("code",[e._v("mixer_type")]),e._v(" specifies which mixer should be used for the audio\noutput: hardware, software, null or none.")]),e._v(" "),t("p",[e._v("The rule of thumb here is not to\nuse sound card mixers, if possible, and adjust the volume on a pre-amp. This\nis what I do with the irDAC.")]),e._v(" "),t("p",[e._v("However, sometimes you might want to use the mixer on your device. See the\nnext audio output configuration for an example on that.")])]),e._v(" "),t("li",[t("p",[e._v("(12) "),t("code",[e._v("replay_gain_handler")]),e._v(" specifies how replay gain is applied. The default\nis "),t("code",[e._v("software")]),e._v(", which uses an internal software volume control. "),t("code",[e._v("mixer")]),e._v(" uses\nthe configured (hardware) mixer control. "),t("code",[e._v("none")]),e._v(" disables replay gain on this\naudio output.")]),e._v(" "),t("p",[e._v("As I do not use neither software, nor hardware mixers, I explicitly disable\nreplay gain on this audio output.")])])]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("The next configuration example is the audio output configuration I use for my\nsecond DAC — AudioQuest DragonFly Black v1.5:")]),e._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('audio_output {\n  type "alsa"\n  name "AudioQuest DragonFly Black v1.5"\n  device "hw:2,0"\n\n  auto_resample "no"\n  auto_channels "no"\n  auto_format "no"\n\n  mixer_type "hardware"\n  mixer_device "hw:2"\n  mixer_control "PCM"\n  mixer_index "0"\n  replay_gain_handler "mixer"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br")])]),t("p",[e._v("As you can see, it’s almost the same as the previous configuration. What’s\ndifferent here is the "),t("code",[e._v("device")]),e._v(" name , "),t("code",[e._v("mixer_type")]),e._v(" and "),t("code",[e._v("replay_gain_handler")]),e._v(":")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("(4) The "),t("code",[e._v("device")]),e._v(" is set to "),t("code",[e._v("hw:2,0")]),e._v(", as the DragonFly’s soundcard is using\nindex number "),t("code",[e._v("2")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("(10) As I cannot control the volume on the DragonFly’s pre-amp physically,\nI need to use its mixer. That’s why "),t("code",[e._v("mixer_type")]),e._v(" is set to "),t("code",[e._v("hardware")]),e._v(".")])]),e._v(" "),t("li",[t("p",[e._v("(11) "),t("code",[e._v("mixer_device")]),e._v(" should address the soundcard (without the subdevice\nindex).")])]),e._v(" "),t("li",[t("p",[e._v("(12) "),t("code",[e._v("mixer_control")]),e._v(" specifies a mixer control, defaulting to "),t("code",[e._v("PCM")]),e._v(". Run\n"),t("code",[e._v("amixer --card N scontrols")]),e._v(" to get a list of available mixer controls on the\nsoundcard.")])]),e._v(" "),t("li",[t("p",[e._v("(13) "),t("code",[e._v("mixer_index")]),e._v(" specifies a mixer control index. This is necessary if\nthere is more than one control with the same name. Defaults to 0 (the first\none).")])]),e._v(" "),t("li",[t("p",[e._v("(14) "),t("code",[e._v("replay_gain_handler")]),e._v(" is set to "),t("code",[e._v("mixer")]),e._v(". If I enable\n"),t("router-link",{attrs:{to:"/audio/#replaygain"}},[e._v("ReplayGain")]),e._v(", MPD will adjust the volume using the hardware\nmixer specified above.")],1)])]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("When you are done with configuration, save the changes in the file (in Vim,\ntype "),t("code",[e._v(":wq")]),e._v(") and restart MPD:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl restart mpd.service\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Now connect to it with your client and put some music on playback!")]),e._v(" "),t("div",{staticClass:"warning custom-block"},[t("p",[e._v("This guide is being updated. Stay tuned!‥")])]),e._v(" "),t("br"),e._v(" "),t("ClientOnly",[t("Disqus",{attrs:{shortname:"notes-maxie-xyz",language:"en"}})],1),e._v(" "),t("br"),e._v(" "),t("div",{staticStyle:{"text-align":"center","font-size":"x-small"}},[e._v("\n    Allow loading scripts from disqus.com to see the comments.\n")])],1)},[],!1,null,null,null);a.default=s.exports}}]);